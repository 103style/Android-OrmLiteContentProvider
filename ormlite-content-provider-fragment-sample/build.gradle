apply plugin: 'com.android.application'

evaluationDependsOn(':ormlite-content-provider-library')

repositories{
    mavenCentral()
    jcenter()
}

dependencies {
    compile project(':ormlite-content-provider-library')
}

android {
    compileSdkVersion androidCompileSdkVersion
    buildToolsVersion androidBuildToolsVersion

    buildTypes {
        defaultConfig {
            applicationId "${project.group}.ormlitecontentprovider.fragment.sample"
            minSdkVersion defaultConfigMinSdkVersion
            targetSdkVersion defaultConfigTargetSdkVersion
            versionCode 1
            versionName project.version
        }

        debug {
            debuggable true
        }
        release {
            debuggable false
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        //instrumentTest.setRoot('tests')
        androidTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
}

commonlibrary {
    apply project, "addTaskArtifactApk"
    apply project, "addTaskArtifactJavadocJar"
    apply project, "addTaskArtifactSourceJar"

    apply project, "addTaskCodeQualityCheckstyle"
    apply project, "addTaskCodeQualityFindbugs"
    apply project, "addTaskCodeQualityPmd"

    apply project, "NeutralNexus"
}

checkstyle {
    ignoreFailures = true
    showViolations = false
    configFile = new File("$rootDir/style_checks.xml")
}

findbugs {
    ignoreFailures = true
    effort = "max"
    excludeFilter file("$projectDir/findbugs-exclude.xml")
}

pmd {
    ignoreFailures = true
    ruleSets = ["java-android", "java-basic", "java-design", "java-imports", "java-braces", "java-strings"]
}

artifacts {
    afterEvaluate {
        archives packageArtifactReleaseApk
        archives packageArtifactReleaseSourceJar
        archives packageArtifactReleaseJavadocJar
    }
}

apply from: "${rootDir}/pom.gradle"
customizePom {
    name = "Android-OrmLiteContentProvider Fragment Sample"
    description = "This is a project for OrmLiteContentProvider Library sample with using ContentProviderFragment."
}

nexus {
    localPublishing = rootProject.ext.localPublishing
}
