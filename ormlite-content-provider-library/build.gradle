apply plugin: 'android-library'
apply plugin: 'maven-publish'

repositories {
    mavenCentral()
}

dependencies {
    androidTestCompile "com.squareup:fest-android:1.0.+"
    compile "com.j256.ormlite:ormlite-core:4.+"
    compile "com.j256.ormlite:ormlite-android:4.+"
}

android {
    compileSdkVersion androidCompileSdkVersion
    buildToolsVersion androidBuildToolsVersion

    defaultConfig {
        minSdkVersion defaultConfigMinSdkVersion
        targetSdkVersion defaultConfigTargetSdkVersion
        versionCode 1
        versionName project.version
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        //instrumentTest.setRoot('tests')
        androidTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    // Note that most of the configuration of the Build Type do not apply to library projects.
    // http://tools.android.com/tech-docs/new-build-system/user-guide#TOC-Differences-between-a-Project-and-a-Library-Project
    buildTypes {
        debug {
            debuggable true
        }
        release {
            debuggable false
        }
    }
}

commonlibrary {
    apply project, "addTaskArtifactAar"
    apply project, "addTaskArtifactApklib"
    apply project, "addTaskArtifactJar"
    apply project, "addTaskArtifactJavadocJar"
    apply project, "addTaskArtifactSourceJar"
}

ext.javadocLinks = [
    "http://ormlite.com/javadoc/ormlite-core/",
    "http://ormlite.com/javadoc/ormlite-android/"
] as String[]

// javadoc for english
generateJavadoc {
    options.locale = 'en_US'
}

artifacts {
    archives artifactAar
    archives artifactApklib
    archives artifactJar
    archives artifactSourceJar
    archives artifactJavadocJar
}

// http://www.gradle.org/docs/current/userguide/publishing_maven.html
// http://www.flexlabs.org/2013/06/using-local-aar-android-library-packages-in-gradle-builds
// http://www.rickcarragher.com/blog/2014/01/21/gradle-and-android

// http://mike-neck.github.io/blog/2013/06/19/publish-maven-artifact-with-sign-files-1/
// http://mike-neck.github.io/blog/2013/06/21/how-to-publish-artifacts-with-gradle-maven-publish-plugin-version-1-dot-6/

// http://chris.banes.me/2013/08/27/pushing-aars-to-maven-central/
// https://github.com/chrisbanes/gradle-mvn-push/blob/master/gradle-mvn-push.gradle
// http://gmariotti.blogspot.jp/2013/09/publish-aar-file-to-maven-central-with.html

android.libraryVariants
publishing {
    publications {
        releaseAar(MavenPublication) {
            artifact artifactAar
        }
        releaseApklib(MavenPublication) {
            artifact artifactApklib
        }
        releaseJar(MavenPublication) {
            artifact artifactJar
        }
        releaseSourceJar(MavenPublication) {
            artifact artifactSourceJar
        }
        releaseJavaDocJar(MavenPublication) {
            artifact artifactJavadocJar
        }
    }
    repositories {
        maven {
            url(mavenRepository)
        }
    }
}
