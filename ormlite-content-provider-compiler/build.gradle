apply plugin: 'java'
apply plugin: 'maven-publish'

evaluationDependsOn(':ormlite-content-provider-library')

repositories {
    mavenCentral()
}

dependencies {
    provided "com.google.android:android:${androidVersion}"

    compile project(path: ':ormlite-content-provider-library', configuration: 'ArtifactJar')
    compile "com.j256.ormlite:ormlite-core:${ormliteVersion}"
    compile "com.j256.ormlite:ormlite-android:${ormliteVersion}"

    compile "com.squareup:javawriter:${javawriterVersion}"

    testCompile "org.springframework:spring-core:${springCoreVersion}"
    testCompile "junit:junit:${junitVersion}"
}


def aptTestGeneratedDir = file("${buildDir}/source/generated-test")

compileTestJava {
    doFirst {
        println "mkdirs : ${aptTestGeneratedDir}"
        aptTestGeneratedDir.mkdirs()
    }

    options.compilerArgs += ['-proc:none', '-s', aptTestGeneratedDir]
}

sourceSets {
    test {
        // http://forums.gradle.org/gradle/topics/classpath_order_of_test_resources_and_test_classes_while_executing_tests
        runtimeClasspath += files(sourceSets.test.java.srcDirs)
    }
}

commonlibrary {
    apply project, "addTaskArtifactJar"
    apply project, "addTaskArtifactJavadocJar"
    apply project, "addTaskArtifactSourceJar"
}

afterEvaluate {
    packageArtifactJar {
        into('META-INF') {
            from 'src/main/resources/META-INF'
        }
    }
}

publishing {
    publications {
        releaseJar(MavenPublication) {
            afterEvaluate {
                artifact packageArtifactJar
            }
        }
        releaseSourceJar(MavenPublication) {
            afterEvaluate {
                artifact packageArtifactSourceJar
            }
        }
        releaseJavadocJar(MavenPublication) {
            afterEvaluate {
                artifact packageArtifactJavadocJar
            }
        }
    }
    repositories {
        maven {
            url(mavenRepository)
        }
    }
}
