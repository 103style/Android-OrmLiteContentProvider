apply plugin: 'com.android.application'

evaluationDependsOn(':ormlite-content-provider-library')

repositories{
    mavenCentral()
    jcenter()
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}

// Temporary workaround for bug: https://code.google.com/p/android-test-kit/issues/detail?id=136
configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:${supportAnnotationsVersion}"
}

dependencies {
    compile project(":ormlite-content-provider-library")

    //compile "com.android.support:support-annotations:${supportAnnotationsVersion}"

    //androidTestCompile project(":ormlite-content-provider-library")

    // java.lang.NoClassDefFoundError: junit/framework/TestCase
    //compile "junit:junit:${junitVersion}"

    // http://tools.android.com/tech-docs/unit-testing-support
    // https://code.google.com/p/android-test-kit/wiki/EspressoSetupInstructions
    // https://code.google.com/p/android/issues/detail?id=151673
    //androidTestCompile "junit:junit:${junitVersion}"
    androidTestCompile("com.android.support.test:testing-support-lib:${testingSupportLibVersion}") {
        transitive=true
    }

    // https://code.google.com/p/android-test-kit/wiki/ReleaseNotes
    // https://github.com/googlesamples/android-testing/blob/master/testrunner/AndroidJunitRunnerSample/app/build.gradle
    //androidTestCompile "com.android.support.test:runner:${testingSupportLibVersion}"
    //androidTestCompile "com.android.support.test:rules:${testingSupportLibVersion}"
    androidTestCompile("com.android.support.test.espresso:espresso-core:${doubleEspressoVersion}") {
        exclude group: "org.hamcrest"
        transitive=true
    }
    //androidTestCompile "com.android.support.test.espresso:espresso-intents:${doubleEspressoVersion}"
    //androidTestCompile "com.android.support.test.uiautomator:uiautomator-v18:2.1.0"
    androidTestCompile "org.hamcrest:hamcrest-core:${hamcrestVersion}"
    androidTestCompile "org.hamcrest:hamcrest-library:${hamcrestVersion}"
    androidTestCompile "org.hamcrest:hamcrest-integration:${hamcrestVersion}"
}

android {
    compileSdkVersion androidCompileSdkVersion
    buildToolsVersion androidBuildToolsVersion

    defaultConfig {
        applicationId "${project.group}.test"
        minSdkVersion defaultConfigMinSdkVersion
        targetSdkVersion defaultConfigTargetSdkVersion
        versionCode 1
        versionName project.version

        testApplicationId "${project.group}.test"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        testFunctionalTest true
    }

    buildTypes {
        debug {
            debuggable true
        }
        release {
            debuggable false
            minifyEnabled false
        }
    }

    packagingOptions {
        // hamcrest-core-1.3.jar
        // for AndroidStudio's bug. duplication error of file below.
        pickFirst 'META-INF/LICENSE.txt'
        pickFirst 'LICENSE.txt'
    }

    // http://stackoverflow.com/questions/28640314/android-studio-fails-to-debug-with-error-org-gradle-process-internal-execexcepti
    // http://hatti.tistory.com/m/post/93
    // https://code.google.com/p/android-test-kit/issues/detail?id=119
    dexOptions {
        jumboMode true
        javaMaxHeapSize "4g"
        preDexLibraries false
    }

    sourceSets {
        androidTest {
            //setRoot('src/test')
        }
    }

    // http://stackoverflow.com/questions/28960898/getting-context-in-androidtestcase-or-instrumentationtestcase-in-android-studio/29063736#29063736
    testOptions {
        unitTests {
            returnDefaultValues = true
        }
    }
}

commonlibrary {
    apply project, "addTaskArtifactApk"
    apply project, "addTaskArtifactJavadocJar"
    apply project, "addTaskArtifactSourceJar"

    apply project, "addTaskCodeQualityCheckstyle"
    apply project, "addTaskCodeQualityFindbugs"
    apply project, "addTaskCodeQualityPmd"

    apply project, "NeutralNexus"
}

checkstyle {
    ignoreFailures = true
    showViolations = false
    configFile = new File("$rootDir/style_checks.xml")
}

findbugs {
    ignoreFailures = true
    effort = "max"
    excludeFilter file("$projectDir/findbugs-exclude.xml")
}

pmd {
    ignoreFailures = true
    ruleSets = ["java-android", "java-basic", "java-design", "java-imports", "java-braces", "java-strings"]
}

artifacts {
    afterEvaluate {
        archives packageArtifactReleaseApk
        archives packageArtifactReleaseSourceJar
        archives packageArtifactReleaseJavadocJar
    }
}

apply from: "${rootDir}/pom.gradle"
customizePom {
    name = "Android-OrmLiteContentProvider Tests"
    description = "This is a project for OrmLiteContentProvider Library test."
}

nexus {
    localPublishing = rootProject.ext.localPublishing
}
