apply plugin: 'com.android.application'

evaluationDependsOn(':ormlite-content-provider-library')

repositories{
    mavenCentral()
    jcenter()
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}

dependencies {
    compile project(":ormlite-content-provider-library")

    androidTestCompile project(":ormlite-content-provider-library")

    // http://tools.android.com/tech-docs/unit-testing-support
    // https://code.google.com/p/android-test-kit/wiki/EspressoSetupInstructions
    // https://code.google.com/p/android/issues/detail?id=151673
    //androidTestCompile("junit:junit:${junitVersion}") {
        //exclude group: "org.hamcrest"
        //transitive=true
    //}
    androidTestCompile("com.android.support.test:testing-support-lib:${testingSupportLibVersion}") {
        //exclude group: "org.hamcrest"
        //exclude group: "junit:junit"
        //transitive=true
    }
    androidTestCompile("com.android.support.test.espresso:espresso-core:${doubleEspressoVersion}") {
        //exclude group: "junit:junit"
        //exclude group: "org.hamcrest"
        //transitive=true
        //exclude group: 'javax.inject'
    }
    //androidTestCompile "org.hamcrest:hamcrest-core:${hamcrestVersion}"
    //androidTestCompile "org.hamcrest:hamcrest-library:${hamcrestVersion}"
    //androidTestCompile "org.hamcrest:hamcrest-integration:${hamcrestVersion}"

    // Tests on Nexus5(AVD) - 4.4.2 failed: Instrumentation run failed due to 'java.lang.NoClassDefFoundError'
    // 
    // com.android.builder.testing.ConnectedDevice > hasTests[Nexus5(AVD) - 4.4.2] FAILED
    // No tests found.
    // :ormlite-content-provider-library-test:connectedAndroidTest FAILED
    // 
    // FAILURE: Build failed with an exception.
    // http://stackoverflow.com/questions/27084948/com-android-builder-testing-connecteddevice-hasteststestavd-5-0-failed
    // http://stackoverflow.com/questions/27234046/android-instrumentation-run-failed-due-to-java-lang-classnotfoundexception-n
    // https://github.com/bryanstern/dagger-instrumentation-example/issues/1
}

android {
    compileSdkVersion androidCompileSdkVersion
    buildToolsVersion androidBuildToolsVersion

    buildTypes {
        defaultConfig {
            applicationId "${project.group}.test"
            minSdkVersion defaultConfigMinSdkVersion
            targetSdkVersion defaultConfigTargetSdkVersion
            versionCode 1
            versionName project.version

            testApplicationId "${project.group}.test"

            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
            testFunctionalTest true
        }

        debug {
            debuggable true
        }
        release {
            debuggable false
            minifyEnabled false
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src', 'build/source/generated']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        //instrumentTest.setRoot('tests')
        //androidTest.setRoot('tests')
        androidTest {
            //setRoot('src')

            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src', 'build/source/generated']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    packagingOptions {
        // hamcrest-core-1.3.jar
        // for AndroidStudio's bug. duplication error of file below.
        pickFirst 'META-INF/LICENSE.txt'
        pickFirst 'LICENSE.txt'
    }

    // http://stackoverflow.com/questions/28640314/android-studio-fails-to-debug-with-error-org-gradle-process-internal-execexcepti
    // http://hatti.tistory.com/m/post/93
    // https://code.google.com/p/android-test-kit/issues/detail?id=119
    dexOptions {
        jumboMode true
        javaMaxHeapSize "4g"
        preDexLibraries false
    }
}

commonlibrary {
    apply project, "addTaskArtifactApk"
    apply project, "addTaskArtifactJavadocJar"
    apply project, "addTaskArtifactSourceJar"

    apply project, "addTaskCodeQualityCheckstyle"
    apply project, "addTaskCodeQualityFindbugs"
    apply project, "addTaskCodeQualityPmd"

    apply project, "NeutralNexus"
}

checkstyle {
    ignoreFailures = true
    showViolations = false
    configFile = new File("$rootDir/style_checks.xml")
}

findbugs {
    ignoreFailures = true
    effort = "max"
    excludeFilter file("$projectDir/findbugs-exclude.xml")
}

pmd {
    ignoreFailures = true
    ruleSets = ["java-android", "java-basic", "java-design", "java-imports", "java-braces", "java-strings"]
}

artifacts {
    afterEvaluate {
        archives packageArtifactReleaseApk
        archives packageArtifactReleaseSourceJar
        archives packageArtifactReleaseJavadocJar
    }
}

apply from: "${rootDir}/pom.gradle"
customizePom {
    name = "Android-OrmLiteContentProvider Tests"
    description = "This is a project for OrmLiteContentProvider Library test."
}

nexus {
    localPublishing = rootProject.ext.localPublishing
}
