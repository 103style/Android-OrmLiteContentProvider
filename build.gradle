buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.9.+'
    }
}

apply from: "gradle/commonlibrary/CommonLibrary.gradle"

commonlibrary {
    apply project, "allprojectsSetEncoding"
    apply project, "allprojectsSetCompatibilityJavaVersion"
    apply project, "allprojectsAddConfigurationProvidedScope"

    // patch
    apply(project, "allprojectsPatchDisableLintOptionsAbortOnError")
    apply(project, "allprojectsPatchEnableAaptOptionsUseAaptPngCruncher")
}

ext {
    mavenRepository = file("${rootDir}/repository")

    // android sdk
    androidCompileSdkVersion = 19
    androidBuildToolsVersion = "19.0.3"
    androidVersion = "4.1.1.4"
    androidSupportVersion = "r7"

    // AndroidManifest.xml
    defaultConfigMinSdkVersion = 8
    defaultConfigTargetSdkVersion = 19

    // main dependencies
    ormliteVersion = "4.48"

    // compiler dependencies
    javawriterVersion = "2.4.0"
    springCoreVersion = "4.0.3.RELEASE"

    // test dependencies
    junitVersion = "4.11"
    doubleEspressoVersion = "1.1-r2"
    hamcrestVersion = "1.3"

    checkstyleVersion = "2.10"
    findbugsVersion = "2.5.2"
    pmdVersion = "3.0.1"

}

allprojects {
    project.group = "com.tojc.ormlite.android"
    //project.version = "1.0.4-SNAPSHOT"
    project.version = "1.0.4"
}

apply plugin: 'android-reporting'
apply plugin: 'maven-publish'

createPom = {
    parent {
        groupId "org.sonatype.oss"
        artifactId "oss-parent"
        version "7"
    }

    name pomName
    description pomDescription
    url "https://github.com/jakenjarvis/Android-OrmLiteContentProvider/"
    inceptionYear "2012"

    modules {
        module "ormlite-content-provider-library"
        module "ormlite-content-provider-library-test"
        module "ormlite-content-provider-compiler"
        module "ormlite-content-provider-sample"
        module "ormlite-content-provider-compiler-sample"
    }

    scm {
        url "https://github.com/jakenjarvis/Android-OrmLiteContentProvider/"
        connection "scm:git:git://github.com/jakenjarvis/Android-OrmLiteContentProvider.git"
        developerConnection "scm:git:git@github.com:jakenjarvis/Android-OrmLiteContentProvider.git"
        tag project.version.contains("SNAPSHOT") ? "HEAD" : "Ver${project.version}"
    }

    developers {
        developer {
            id "jakenjarvis"
            name "Jaken Jarvis"
            email "jaken.jarvis@gmail.com"
            url "https://github.com/jakenjarvis"
            roles {
                role "architect"
                role "developer"
            }
            timezone "+9"
        }
    }

    contributors {
        contributor {
            name "StÃ©phane NICOLAS"
            email "snicolas@octo.com"
            url "https://github.com/stephanenicolas"
            organization "octo-online"
            organizationUrl "http://www.octo.com"
            roles {
                role "developer"
            }
            timezone "+1"
        }
    }

    licenses {
        license {
            name "Apache License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }

    organization {
        name "Android-OrmLiteContentProvider Team"
        url "https://github.com/jakenjarvis/Android-OrmLiteContentProvider"
    }

    issueManagement {
        system "GitHub Issues"
        url "https://github.com/jakenjarvis/Android-OrmLiteContentProvider/issues"
    }

    def configScopeMap = ['compile' : null, 'testCompile' : { scope 'test' }, 'provided' : { scope 'provided' }]
    dependencies {
        project.configurations.matching { it.name in configScopeMap.keySet() }.each { configuration ->
            configuration.dependencies.each { depend ->
                dependency {
                    groupId depend.group
                    artifactId depend.name
                    version depend.version
                    configScopeMap[configuration.name]?.call()
                }
            }
        }
    }

}

//ext.createPom = createPom()

publishing {
    publications {
        releaseArtifact(MavenPublication) {
            afterEvaluate {
                artifactId "ormlite-content-provider-parent"

                pom.withXml {
                    createPom.resolveStrategy = Closure.DELEGATE_FIRST
                    createPom.pomName = "Android-OrmLiteContentProvider Parent"
                    createPom.pomDescription = "This is a library that easy to make using ContentProvider with OrmLite."
                    asNode().children().last() + createPom
                }
            }
        }
    }
    repositories {
        maven {
            url(mavenRepository)
        }
    }
}
